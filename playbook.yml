---
- name: deploy digitalocean vm
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    do_token: "{{ lookup('env', 'DIGITALOCEAN_API_TOKEN') }}"
    ssh_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    ssh_key_ids: 9832755
    droplet_name: droplet-01
    size_id: 1gb
    region_id: sfo2
    image_id: ubuntu-16-04-x64
    private_networking: yes
    backups_enabled: yes
    unique_name: yes
  tasks:
    - name: Ensure SSH Key Exists on DigitalOcean
      digital_ocean:
        state: present
        command: ssh
        name: mike@mikes-mbp
        ssh_pub_key: "{{ ssh_pub_key }}"
        api_token: "{{ do_token }}"
    - name: Ensure droplets exist
      digital_ocean:
        state: present
        command: droplet
        name: "{{ droplet_name }}"
        unique_name: yes
        backups_enabled: "{{ backups_enabled }}"
        private_networking: "{{ private_networking }}"
        api_token: "{{ do_token }}"
        size_id: "{{ size_id }}"
        region_id: "{{ region_id }}"
        image_id: "{{ image_id }}"
        ssh_key_ids: "{{ ssh_key_ids }}"
        wait_timeout: 500
      register: do
    - name: "Ensure block storage exists for droplet {{ droplet_name }}"
      digital_ocean_block_storage:
        state: present
        command: create
        api_token: "{{ do_token }}"
        region: "{{ region_id }}"
        block_size: 10
        volume_name: "volume-{{ region_id }}-{{ droplet_name }}"
    - name: "Ensure block storage is attached to droplet {{ droplet_name }}"
      digital_ocean_block_storage:
        state: present
        command: attach
        api_token: "{{ do_token }}"
        region: "{{ region_id }}"
        block_size: 10
        volume_name: "volume-{{ region_id }}-{{ droplet_name }}"
        droplet_id: "{{ do.droplet.id }}"
    - name: Add new host to our digitalocean (do) inventory
      add_host:
        name: "{{ do.droplet.networks.v4[1].ip_address }}"
        region: "{{ do.droplet.region.slug }}"
        ansible_host: "{{ do.droplet.networks.v4[1].ip_address }}"
        ansible_port: 22
        ip_address: "{{ do.droplet.networks.v4[1].ip_address }}"
        groups: do
      when: do.droplet is defined

- name: provision digitalocean vm
  hosts: do
  remote_user: root
  gather_facts: false
  pre_tasks:
    - name: Wait for port 22 to become available.
      local_action:
        module: wait_for
          host={{ inventory_hostname }}
          port=22
          delay=1
          timeout=300
    - name: "FIX: Ubuntu 16.04 LTS doesn't come with certain modules, required by ansible"
      raw: apt-get install python-simplejson python-minimal aptitude -y
      become: true
      become_user: root
      become_method: sudo
    - name: 'Gather Facts'
      setup:
  roles:
    - server
